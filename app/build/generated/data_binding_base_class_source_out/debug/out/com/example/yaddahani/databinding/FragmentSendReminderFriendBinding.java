// Generated by view binder compiler. Do not edit!
package com.example.yaddahani.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.yaddahani.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendReminderFriendBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ProgressBar sentReminderProgressBar;

  @NonNull
  public final FloatingActionButton toFendReminderFloatingButtonId;

  @NonNull
  public final RecyclerView toFriendListReminderRecyclerView;

  @NonNull
  public final ImageView toFriendReminderBackArrowId;

  @NonNull
  public final CircleImageView toSendFriendReminderImageId;

  @NonNull
  public final ImageView toSendFriendReminderMoreVertIt;

  @NonNull
  public final TextView toSendFriendReminderNameId;

  private FragmentSendReminderFriendBinding(@NonNull RelativeLayout rootView,
      @NonNull ProgressBar sentReminderProgressBar,
      @NonNull FloatingActionButton toFendReminderFloatingButtonId,
      @NonNull RecyclerView toFriendListReminderRecyclerView,
      @NonNull ImageView toFriendReminderBackArrowId,
      @NonNull CircleImageView toSendFriendReminderImageId,
      @NonNull ImageView toSendFriendReminderMoreVertIt,
      @NonNull TextView toSendFriendReminderNameId) {
    this.rootView = rootView;
    this.sentReminderProgressBar = sentReminderProgressBar;
    this.toFendReminderFloatingButtonId = toFendReminderFloatingButtonId;
    this.toFriendListReminderRecyclerView = toFriendListReminderRecyclerView;
    this.toFriendReminderBackArrowId = toFriendReminderBackArrowId;
    this.toSendFriendReminderImageId = toSendFriendReminderImageId;
    this.toSendFriendReminderMoreVertIt = toSendFriendReminderMoreVertIt;
    this.toSendFriendReminderNameId = toSendFriendReminderNameId;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendReminderFriendBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendReminderFriendBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_send_reminder_friend, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendReminderFriendBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sentReminderProgress_Bar;
      ProgressBar sentReminderProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (sentReminderProgressBar == null) {
        break missingId;
      }

      id = R.id.toFendReminderFloatingButtonId;
      FloatingActionButton toFendReminderFloatingButtonId = ViewBindings.findChildViewById(rootView, id);
      if (toFendReminderFloatingButtonId == null) {
        break missingId;
      }

      id = R.id.toFriendListReminderRecyclerView;
      RecyclerView toFriendListReminderRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (toFriendListReminderRecyclerView == null) {
        break missingId;
      }

      id = R.id.toFriendReminderBackArrowId;
      ImageView toFriendReminderBackArrowId = ViewBindings.findChildViewById(rootView, id);
      if (toFriendReminderBackArrowId == null) {
        break missingId;
      }

      id = R.id.toSendFriendReminderImageId;
      CircleImageView toSendFriendReminderImageId = ViewBindings.findChildViewById(rootView, id);
      if (toSendFriendReminderImageId == null) {
        break missingId;
      }

      id = R.id.toSendFriendReminderMoreVertIt;
      ImageView toSendFriendReminderMoreVertIt = ViewBindings.findChildViewById(rootView, id);
      if (toSendFriendReminderMoreVertIt == null) {
        break missingId;
      }

      id = R.id.toSendFriendReminderNameId;
      TextView toSendFriendReminderNameId = ViewBindings.findChildViewById(rootView, id);
      if (toSendFriendReminderNameId == null) {
        break missingId;
      }

      return new FragmentSendReminderFriendBinding((RelativeLayout) rootView,
          sentReminderProgressBar, toFendReminderFloatingButtonId, toFriendListReminderRecyclerView,
          toFriendReminderBackArrowId, toSendFriendReminderImageId, toSendFriendReminderMoreVertIt,
          toSendFriendReminderNameId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
