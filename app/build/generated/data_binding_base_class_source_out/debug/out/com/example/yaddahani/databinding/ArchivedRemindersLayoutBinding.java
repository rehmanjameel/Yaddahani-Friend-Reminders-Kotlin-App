// Generated by view binder compiler. Do not edit!
package com.example.yaddahani.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.yaddahani.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ArchivedRemindersLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView archivedDetailTextId;

  @NonNull
  public final ImageView archivedExpandBottomArrowId;

  @NonNull
  public final TextView archivedReminderDateId;

  @NonNull
  public final LinearLayout archivedReminderDetailListId;

  @NonNull
  public final TextView archivedReminderNameId;

  @NonNull
  public final TextView archivedReminderStatusId;

  @NonNull
  public final TextView archivedReminderTextId;

  @NonNull
  public final TextView archivedReminderTimeId;

  @NonNull
  public final CardView archivedRemindersCardId;

  @NonNull
  public final LinearLayout archivedRemindersLisId;

  @NonNull
  public final ImageView unArchiveReminderId;

  private ArchivedRemindersLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView archivedDetailTextId, @NonNull ImageView archivedExpandBottomArrowId,
      @NonNull TextView archivedReminderDateId, @NonNull LinearLayout archivedReminderDetailListId,
      @NonNull TextView archivedReminderNameId, @NonNull TextView archivedReminderStatusId,
      @NonNull TextView archivedReminderTextId, @NonNull TextView archivedReminderTimeId,
      @NonNull CardView archivedRemindersCardId, @NonNull LinearLayout archivedRemindersLisId,
      @NonNull ImageView unArchiveReminderId) {
    this.rootView = rootView;
    this.archivedDetailTextId = archivedDetailTextId;
    this.archivedExpandBottomArrowId = archivedExpandBottomArrowId;
    this.archivedReminderDateId = archivedReminderDateId;
    this.archivedReminderDetailListId = archivedReminderDetailListId;
    this.archivedReminderNameId = archivedReminderNameId;
    this.archivedReminderStatusId = archivedReminderStatusId;
    this.archivedReminderTextId = archivedReminderTextId;
    this.archivedReminderTimeId = archivedReminderTimeId;
    this.archivedRemindersCardId = archivedRemindersCardId;
    this.archivedRemindersLisId = archivedRemindersLisId;
    this.unArchiveReminderId = unArchiveReminderId;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ArchivedRemindersLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ArchivedRemindersLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.archived_reminders_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ArchivedRemindersLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.archivedDetailTextId;
      TextView archivedDetailTextId = ViewBindings.findChildViewById(rootView, id);
      if (archivedDetailTextId == null) {
        break missingId;
      }

      id = R.id.archivedExpandBottomArrowId;
      ImageView archivedExpandBottomArrowId = ViewBindings.findChildViewById(rootView, id);
      if (archivedExpandBottomArrowId == null) {
        break missingId;
      }

      id = R.id.archivedReminderDateId;
      TextView archivedReminderDateId = ViewBindings.findChildViewById(rootView, id);
      if (archivedReminderDateId == null) {
        break missingId;
      }

      id = R.id.archivedReminderDetailListId;
      LinearLayout archivedReminderDetailListId = ViewBindings.findChildViewById(rootView, id);
      if (archivedReminderDetailListId == null) {
        break missingId;
      }

      id = R.id.archivedReminderNameId;
      TextView archivedReminderNameId = ViewBindings.findChildViewById(rootView, id);
      if (archivedReminderNameId == null) {
        break missingId;
      }

      id = R.id.archivedReminderStatusId;
      TextView archivedReminderStatusId = ViewBindings.findChildViewById(rootView, id);
      if (archivedReminderStatusId == null) {
        break missingId;
      }

      id = R.id.archivedReminderTextId;
      TextView archivedReminderTextId = ViewBindings.findChildViewById(rootView, id);
      if (archivedReminderTextId == null) {
        break missingId;
      }

      id = R.id.archivedReminderTimeId;
      TextView archivedReminderTimeId = ViewBindings.findChildViewById(rootView, id);
      if (archivedReminderTimeId == null) {
        break missingId;
      }

      id = R.id.archivedRemindersCardId;
      CardView archivedRemindersCardId = ViewBindings.findChildViewById(rootView, id);
      if (archivedRemindersCardId == null) {
        break missingId;
      }

      id = R.id.archivedRemindersLisId;
      LinearLayout archivedRemindersLisId = ViewBindings.findChildViewById(rootView, id);
      if (archivedRemindersLisId == null) {
        break missingId;
      }

      id = R.id.unArchiveReminderId;
      ImageView unArchiveReminderId = ViewBindings.findChildViewById(rootView, id);
      if (unArchiveReminderId == null) {
        break missingId;
      }

      return new ArchivedRemindersLayoutBinding((RelativeLayout) rootView, archivedDetailTextId,
          archivedExpandBottomArrowId, archivedReminderDateId, archivedReminderDetailListId,
          archivedReminderNameId, archivedReminderStatusId, archivedReminderTextId,
          archivedReminderTimeId, archivedRemindersCardId, archivedRemindersLisId,
          unArchiveReminderId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
